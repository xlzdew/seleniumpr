dotnet_library(name = "core",
  srcs = "**/*.cs",
  refs = [
    "System.dll",
    "System.Core.dll",
    "System.Data.dll",
    "System.Xml.dll",
    "System.Web.dll"
  ],
  framework_ver = "net40",
  out = "ThoughtWorks.Selenium.Core.dll"
)

dotnet_library(name = "core35",
  srcs = "**/*.cs",
  refs = [
    "System.dll",
    "System.Core.dll",
    "System.Data.dll",
    "System.Xml.dll",
    "System.Web.dll"
  ],
  framework_ver = "net35",
  out = "ThoughtWorks.Selenium.Core.dll"
)

dotnet_library(name = "strongnamed",
  srcs = "**/*.cs",
  refs = [
    "System.dll",
    "System.Core.dll",
    "System.Data.dll",
    "System.Xml.dll",
    "System.Web.dll"
  ],
  keyfile = "WebDriver.snk",
  framework_ver = "net40",
  out = "ThoughtWorks.Selenium.Core.dll"
)

dotnet_library(name = "strongnamed35",
  srcs = "**/*.cs",
  refs = [
    "System.dll",
    "System.Core.dll",
    "System.Data.dll",
    "System.Xml.dll",
    "System.Web.dll"
  ],
  keyfile = "WebDriver.snk",
  framework_ver = "net35",
  out = "ThoughtWorks.Selenium.Core.dll"
)

dotnet_package(name = "package",
  packageid = "Selenium.RC",
  deps = [
    ":core",
    ":core35"
  ],
  title = "Selenium Remote Control (RC)",
  summary = ".NET bindings for the Selenium RC API",
  description = "Selenium is a set of different software tools each with a different approach to supporting browser automation. These tools are highly flexible, allowing many options for locating and manipulating elements within a browser, and one of its key features is the support for automating multiple browser platforms. This package contains the .NET bindings for the older, more procedural Selenium Remote Control (or Selenium RC) API. It requires a running instance of the Selenium Server, and uses JavaScript for automating the browser, which means it is limited to the functionality available from within the JavaScript sandbox.",
  tags = "Selenium remote control RC browser automation",
  assemblies = [
    {"System.Drawing" : ""}
  ]
)
